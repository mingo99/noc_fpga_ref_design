/* WARNING: THIS FILE WAS GENERATED AUTOMATICALLY. DO NOT CHANGE IT */


/*  Msglog log levels - NOTE: use the symbolic names, as the numeric values */
/*  are subject to change. */
#define   LOG_ERR                0  /*  ERROR - big problem. */
#define   LOG_ERROR              0    

#define   LOG_WARN               1  /*  WARNINGS - some kind of problem. */
#define   LOG_WARNING            1    

#define   LOG_NOTE               2  /*  Notice - something that may be an issue, but not illegal */
#define   LOG_NOTICE             2    

#define   LOG_INFO               3  /*  Informational */

#define   LOG_TRANSACT           4  /*  Transaction level */

#define   LOG_FSM                5  /*  State Machine */
#define   LOG_FIS                5  /*  FIS level messages */
#define   LOG_FRAME              5  /*  Frame level messages */

#define   LOG_DWORD              6  /*  DWORD / PRIM debug-level messages */

#define   LOG_DBG                7  /*  debug-level messages */
#define   LOG_DEBUG              7  /*  debug-level messages */

#define   LOG_NUM_LEVELS         8  /*  number of debug levels available -- Note that defparaming this will be ignored. */

#ifdef SVT_INCLUDE_SVC_MESSAGING
#define   LOG_MAX                7  /*  Always allow debug messages in SVT context */
#else /*  SVT_INCLUDE_SVC_MESSAGING */
#define   LOG_MAX                6  /*  highest level to log (avoids $msglog call altogether) */
#endif

#define   LOG_LEVEL_MASK         0x0000000f

#define   LOG_OPT_NO_TIMESTAMP   0x00000100 /*  Don't display the timestamp */
#define   LOG_OPT_NO_LOG_LEVEL   0x00000200 /*  Don't display the Log Level */
#define   LOG_OPT_NO_PREFIX      0x00000300 /*  Neither Timestamp nor Log Level are displayed */
#define   LOG_OPT_NO_NEWLINE     0x00000400 /*  Neither Timestamp nor Log Level are displayed */
#define   LOG_OPT_TRANSACTION    0x00000800 /*  This is a transaction msglog, write to trace file, ignoring log level */
#define   LOG_OPT_SYMBOL         0x00001000 /*  This is a symbol msglog, write to symbol file, ignoring log level */
#ifdef PCIESVC_INCLUDE_SVT_API
#define   LOG_OPT_SVT_START_BUFFER   0x00002000 /*  Start Buffered Message - only for SVT  */
#define   LOG_OPT_SVT_FLUSH_BUFFER   0x00004000 /*  Flush Buffered Message - only for SVT  */
#endif
#define   LOG_OPT_APPLICATION    0x00008000 /*  This is a application msglog, write to trace file, ignoring log level */
#define   LOG_OPT_MASK           0x0000ff00

/*  defintions for svc_clkgen.v */
#define   CLKGEN_PROFILE_MODE_STORAGE   0    /*  SAS and SATA */
#define   CLKGEN_PROFILE_MODE_FC        1    /*  Fibre channel */
#define   CLKGEN_PROFILE_MODE_ETHERNET  2    /*  802.3 Ethernet */
#define   CLKGEN_PROFILE_MODE_PCIE      3    /*  PCI Express */
#define   CLKGEN_PROFILE_MODE_MPCIE     4    /*  PCI Express over mphy */
#define   CLKGEN_PROFILE_MODE_SAS       5    /*  SAS */

/*  The following are predfined constants for the clkgen freq select value for Ethernet profile */
#define   CLKGEN_FREQ_SELECT_ETHERNET_10M    0 /*  10Mb no encoding */
#define   CLKGEN_FREQ_SELECT_ETHERNET_100M   1 /*  100Mb no encoding */
#define   CLKGEN_FREQ_SELECT_ETHERNET_1000M  2 /*  1Gb no encoding */
#define   CLKGEN_FREQ_SELECT_ETHERNET_1000X  3 /*  1Gb 8b10b encoding */
#define   CLKGEN_FREQ_SELECT_ETHERNET_KX     3 /*  1Gb 8b10b encoded */
#define   CLKGEN_FREQ_SELECT_ETHERNET_XAUI   4 /*  10G Base X 4 lane 8b10b encoded */
#define   CLKGEN_FREQ_SELECT_ETHERNET_KX4    4 /*  10G Base X 4 lane 8b10b encoded */
#define   CLKGEN_FREQ_SELECT_ETHERNET_XFI    5 /*  10G base-r 64b66b encoded */
#define   CLKGEN_FREQ_SELECT_ETHERNET_KR     5 /*  10G base-r 64b66b encoded */
#define   CLKGEN_FREQ_SELECT_ETHERNET_40G    6 /*  40G clause82 64b66b base-R encoded */
#define   CLKGEN_FREQ_SELECT_ETHERNET_100G   7 /*  100G clause82 64b66b base-R encoded */

/*  The following are predfined constants for the clkgen freq select value for Fibre Channel profile */
#define   CLKGEN_FREQ_SELECT_FC_1G           0 /*  1Gb, 8b10b encoding */
#define   CLKGEN_FREQ_SELECT_FC_2G           1 /*  2Gb, 8b10b encoding */
#define   CLKGEN_FREQ_SELECT_FC_4G           2 /*  4Gb, 8b10b encoding */
#define   CLKGEN_FREQ_SELECT_FC_8G           3 /*  8Gb, 8b10b encoding */
#define   CLKGEN_FREQ_SELECT_FC_10G_XAUI     4 /*  10G Base X 4 lane 8b10b encoded */
#define   CLKGEN_FREQ_SELECT_FC_10G_XFI      5 /*  10G base-R 64b66b encoded */
#define   CLKGEN_FREQ_SELECT_FC_16G_XFI      6 /*  16G base-R 64b66b encoded */
#define   CLKGEN_FREQ_SELECT_FC_32G_XFI      7 /*  32G base-R 64b66b encoded */
#define   CLKGEN_FREQ_SELECT_FC_64G_XFI      8 /*  64G base-R 64b66b encoded */
#define   CLKGEN_FREQ_SELECT_FC_128G_XFI     9 /*  128G base-R 64b66b encoded */

/*  The following are predfined constants for the clkgen freq select value for Serial SCSI profile */
#define   CLKGEN_FREQ_SELECT_SAS_1_5G         0 /*  1.5Gb, 8b10b encoding */
#define   CLKGEN_FREQ_SELECT_SAS_3G           1 /*  3Gb, 8b10b encoding */
#define   CLKGEN_FREQ_SELECT_SAS_6G           2 /*  6Gb, 8b10b encoding */
#define   CLKGEN_FREQ_SELECT_SAS_12G          3 /*  12Gb, 8b10b encoding */
#define   CLKGEN_FREQ_SELECT_SAS_22_5G        4 /*  22.5Gb, 128b150b encoding */

/*  The following are predfined constants for the clkgen freq select value for PCI Express profile */
#define   CLKGEN_FREQ_SELECT_PCIE_2_5G       1 /*  Gen1, 2.5Gb,8b10b encoding */
#define   CLKGEN_FREQ_SELECT_PCIE_5G         2 /*  Gen2, 5Gb,  8b10b encoding */
#define   CLKGEN_FREQ_SELECT_PCIE_8G         3 /*  Gen3, 8Gb,  128b/130b encoding */
#define   CLKGEN_FREQ_SELECT_PCIE_16G        4 /*  Gen4, 16Gb, 128b/130b encoding */
#define   CLKGEN_FREQ_SELECT_PCIE_20G        5 /*  Gen4, 20Gb, 128b/130b encoding CCIX ESM */
#define   CLKGEN_FREQ_SELECT_PCIE_25G        6 /*  Gen4, 25Gb, 128b/130b encoding CCIX ESM */
#define   CLKGEN_FREQ_SELECT_PCIE_32G        7 /*  Gen5, 32Gb, 128b/130b encoding */
#define   CLKGEN_FREQ_SELECT_PCIE_64G        8 /*  Gen6, 64Gb, 128b/130b encoding */

/*  The following are predfined constants for the clkgen freq select value for SATA Express profile */
#define   CLKGEN_FREQ_SELECT_SATA_1_5G       0 /*  Gen1, 1.5Gb */
#define   CLKGEN_FREQ_SELECT_SATA_3G         1 /*  Gen2, 3Gb */
#define   CLKGEN_FREQ_SELECT_SATA_6G         2 /*  Gen3, 6Gb */

/*  The following are predfined constants for the selecting the output signal of clkgen based upon freq select */
#define   CLKGEN_FREQ_SELECT_SATA_10BIT_CLK_PERIOD  1 
#define   CLKGEN_FREQ_SELECT_SATA_20BIT_CLK_PERIOD  2 
#define   CLKGEN_FREQ_SELECT_SATA_40BIT_CLK_PERIOD  3 

/*  Due to PIPE 4 addition of txdatavalid/rxdatavalid the frequencies are not exclusive to one speed. */
#define   CLKGEN_FREQ_SELECT_PCIE_250MHZ_BYTE_CLK_PERIOD    1 
#define   CLKGEN_FREQ_SELECT_PCIE_500MHZ_BYTE_CLK_PERIOD    2 
#define   CLKGEN_FREQ_SELECT_PCIE_1000MHZ_BYTE_CLK_PERIOD   3 
#define   CLKGEN_FREQ_SELECT_PCIE_2000MHZ_BYTE_CLK_PERIOD   4 
#define   CLKGEN_FREQ_SELECT_PCIE_2500MHZ_BYTE_CLK_PERIOD   5 
#define   CLKGEN_FREQ_SELECT_PCIE_3125MHZ_BYTE_CLK_PERIOD   6 
#define   CLKGEN_FREQ_SELECT_PCIE_4000MHZ_BYTE_CLK_PERIOD   7 
#define   CLKGEN_FREQ_SELECT_PCIE_8000MHZ_BYTE_CLK_PERIOD   8 

#define   CLKGEN_FREQ_SELECT_MPCIE_SERIESA_HSG1             1 /*  HS Gear1, Rate series A, 8b10b encoding, 1.248 Gb/s */
#define   CLKGEN_FREQ_SELECT_MPCIE_SERIESA_HSG2             2 /*  HS Gear2, Rate series A, 8b10b encoding, 2.496 Gb/s */
#define   CLKGEN_FREQ_SELECT_MPCIE_SERIESA_HSG3             3 /*  HS Gear3, Rate series A, 8b10b encoding, 4.992 Gb/s */
#define   CLKGEN_FREQ_SELECT_MPCIE_SERIESB_HSG1             4 /*  HS Gear1, Rate series B, 8b10b encoding, 1.4576 Gb/s */
#define   CLKGEN_FREQ_SELECT_MPCIE_SERIESB_HSG2             5 /*  HS Gear2, Rate series B, 8b10b encoding, 2.9152 Gb/s */
#define   CLKGEN_FREQ_SELECT_MPCIE_SERIESB_HSG3             6 /*  HS Gear3, Rate series B, 8b10b encoding, 5.8304 Gb/s */

/*  String Routine Parameters (used in svc_util_tasks.v) */
#define   MAX_SCAN_STR_LEN  1024  /*  Maximum string length for the Parser/scanner: ScanStrForToken() */
#define   EOF_CHAR  0xffff_ffff /*  Return from fgetc() if EOF */

/*  $msglog_control(request, arg) */
/*  The $msglog_control() requests: */
#define   MSGLOG_CONTROL_SET_DISPLAY               1
#define   MSGLOG_CONTROL_SET_TIME_DISPLAY_UNIT     2
#define   MSGLOG_CONTROL_SET_LOG_COUNT_VARIABLE    3
#define   MSGLOG_CONTROL_SET_LOG_FILE              4
#define   MSGLOG_CONTROL_SET_TRANSACTION_LOG_HDR   5
#define   MSGLOG_CONTROL_SET_TRANSACTION_LOG_FILE  6
#define   MSGLOG_CONTROL_SET_SYMBOL_LOG_HDR        7
#define   MSGLOG_CONTROL_SET_SYMBOL_LOG_FILE       8
#define   MSGLOG_CONTROL_PRINT_SYMBOL_LOG_HDR      9
#define   MSGLOG_CONTROL_SET_APPLICATION_LOG_HDR   10
#define   MSGLOG_CONTROL_SET_APPLICATION_LOG_FILE  11


/*  The msglog_control() set display request args: */
#define   MSGLOG_DISPLAY_SCOPE_ENABLED             (1<<0)  /*  If set, msglog will display scope of msglog calls to log. */
#define   MSGLOG_DISPLAY_SCOPE_SHOW_SCOPE          (1<<1)  /*  If set, show entire scope (e.g. labels), else modules */
#define   MSGLOG_DISPLAY_SCOPE_SHOW_SUPPRESSABLE   (1<<2)  /*  If set, show scopes only of suppressable msglog calls (those with a msgcode)  */
#define   MSGLOG_DISPLAY_SCOPE_SHOW_AT_START       (1<<3)  /*  If set, show only dump of scopes at startup. (Only works at compile time.) */
#define   MSGLOG_DISPLAY_MSG_CODE                  (1<<4)  /*  If set, show msg codes of msglog calls. */

/* The msglog_contro() SET_TIME_DISPLAY_UNIT units */
#define   MSGLOG_TIME_DISPLAY_UNIT_US  6
#define   MSGLOG_TIME_DISPLAY_UNIT_NS  9
#define   MSGLOG_TIME_DISPLAY_UNIT_PS  12
#define   MSGLOG_TIME_DISPLAY_UNIT_FS  15

#define   MSGLOG_MAX_SUPPRESSIONS              1024    /*  Max number of unique $msglog_suppress calls */
#define   MSGLOG_MAX_TRANSACTION_LOG_HEADERS   3
#define   MSGLOG_MAX_APPLICATION_LOG_HEADERS   3
#define   MSGLOG_MAX_SYMBOL_LOG_HEADERS        30

/*  Global Message Codes */
#define   MSGCODE_ALL_MESSAGES  0      /*  Wildcard message - causes all messages within a module to be suppressed. */

/* WARNING: THIS FILE WAS GENERATED AUTOMATICALLY. DO NOT CHANGE IT */
